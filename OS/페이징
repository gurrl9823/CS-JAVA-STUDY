### 세그멘테이션과 페이징의 차이점은 무엇인가요?

- 위 두 가지의 장단점
- 페이지와 프레임의 차이를 설명해 주세요.
- 내부 단편화와, 외부 단편화에 대해 설명해 주세요.
- 페이지에서 실제 주소를 어떻게 가져올 수 있는지 설명해 주세요.
- 어떤 주소공간이 있을 때, 이 공간이 수정 가능한지 확인할 수 있는 방법이 있나요?
- 32비트에서, 페이지의 크기가 1kb 이라면 페이지 테이블의 최대 크기는 몇 개일까요?

### 페이지 크기에 대한 trade-off를 설명해주세요.

- 페이지 크기가 커지면 페이지 폴트가 더 많이 발생하는지?

### TLB는 무엇인가요?

- TLB를 쓰면 왜 빨라지나요?
- MMU가 무엇인가요?
- TLB와 MMU는 어디에 위치해 있나요?

---

### Page Fault란

- page fault가 발생하였을때, 이를 처리하는 과정을 설명해주세요.
- 페이지 교체 알고리즘엔 어떤 것들이 있나요?

### 페이지 교체 알고리즘엔 어떤 것들이 있나요?

- MFU MRU 의 가치?
- Clock / Second chance
- LRU 알고리즘은 어떤 특성을 이용한 알고리즘이라고 할 수 있을까요?
- LRU 알고리즘을 구현한다면, 어떻게 구현할 수 있을까요?

---

## 메모리의 연속할당 방식 세 가지를 설명해주세요. (first-fit, best-fit, worst-fit)

- worst-fit이 왜 사용될까요?
- buddy-system / slab Memory Allocator이란
- 성능이 가장 좋은 알고리즘은 무엇일까요?
- 물리메모리/가상메모리/캐시메모리 설명해주세요

### 가상 메모리란 무엇인가요?

- 가상 메모리가 가능한 이유가 무엇일까요?
- Secondary Memory에서 page를 가져오는 영역 이름
- ddalcls
- Page Fault가 발생했을 때, 어떻게 처리하는지 설명해 주세요.
- 페이지 크기에 대한 Trade-Off를 설명해 주세요.
- 페이지 크기가 커지면, 페이지 폴트가 더 많이 발생한다고 할 수 있나요?

### 캐시 메모리 및 메모리 계층성에 대해 설명해 주세요.

- Cache는 어디있나?
- L1, L2 캐시
- 캐시에 올라오는 데이터는 어떻게 관리가 되나? cache Line
- 캐시 메모리는 어디에 위치해 있나요?
- L1, L2 캐시에 대해 설명해 주세요.
- 캐시에 올라오는 데이터는 어떻게 관리되나요?
- 캐시간의 동기화는 어떻게 이루어지나요?
- 캐시 메모리의 Mapping 방식에 대해 설명해 주세요.
- 캐시의 지역성에 대해 설명해 주세요.
- 캐시의 지역성을 기반으로, 이차원 배열을 가로/세로로 탐색했을 때의 성능 차이에 대해 설명해 주세요.

### MMU

- OS에서 프로세스는 CPU와 메모리 사이에 MMU(Memory Management Unit)를 두어서 다른 프로세스에 접근할하지 못합니다. 그러나 GDB와 같은 디버거의 경우 다른 프로세스에 접근하여 절대적 메모리 주소와 값을 읽어올 수 있습니다. 어떻게 가능한지 동작 방식에 대해서 설명하세요.

---

### 파일 시스템

- File Descriptor 에 대해 설명해 주세요.
- 표준 입력(STDIN), 표준 출력(STDOUT), 표준 에러(STDERR)
- File System에 대해 설명해 주세요.
- i-Node에 대해 설명해 주세요.
